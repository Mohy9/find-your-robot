{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Jakub\\\\React\\\\find-your-robot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Jakub\\\\React\\\\find-your-robot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Jakub\\\\React\\\\find-your-robot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Jakub\\\\React\\\\find-your-robot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Jakub\\\\React\\\\find-your-robot\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import CardList from'../components/CardList';import SearchBox from'../components/SearchBox';// import { robots } from './robots';\nimport Scroll from'../components/Scroll';import'./App.css';//virtual DOM, collecting states as robots and searchfields\nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.onSearchChange=function(event){_this.setState({searchfield:event.target.value});};_this.state={robots:[],searchfield:''};return _this;}// more info https://reactjs.org/docs/react-component.html\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return _this2.setState({robots:users});});}//listening to the event and with every change runs the function\n},{key:\"render\",//rendering cards with robots\nvalue:function render(){var _this3=this;var filteredRobots=this.state.robots.filter(function(robot){return robot.name.toLowerCase().includes(_this3.state.searchfield.toLowerCase());});//loading in slow connection scenario - just comment componentDidMount function for test\nif(this.state.robots.length===0){return React.createElement(\"h1\",null,\" Loading\");}else{return React.createElement(\"div\",{className:\"tc\"},React.createElement(\"h1\",{className:\"f1\"},\"RoboFriends\"),React.createElement(SearchBox,{searchChange:this.onSearchChange}),React.createElement(Scroll,null,React.createElement(CardList,{robots:filteredRobots})));}}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["C:/Users/Jakub/react/find-your-robot/src/containers/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","App","onSearchChange","event","setState","searchfield","target","value","state","robots","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":"ooBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAO,WAAP,CAEA;GACMC,CAAAA,G,6DACL,cAAa,qCACZ,uEADY,MAgBZC,cAhBY,CAgBK,SAACC,KAAD,CAAW,CAC3B,MAAKC,QAAL,CAAc,CAAEC,WAAW,CAAEF,KAAK,CAACG,MAAN,CAAaC,KAA5B,CAAd,EACG,CAlBQ,CAEZ,MAAKC,KAAL,CAAW,CACXC,MAAM,CAAE,EADG,CAEXJ,WAAW,CAAC,EAFD,CAAX,CAFY,aAMZ,CAEF;6EACoB,iBAClBK,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAGA,CAAAA,QAAQ,CAACC,IAAT,EAAH,EADd,EAECF,IAFD,CAEM,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACV,QAAL,CAAc,CAACK,MAAM,CAAEK,KAAT,CAAd,CAAJ,EAFX,EAGA,CAEF;gBAIA;uBACU,iBACJ,GAAMC,CAAAA,cAAc,CAAG,KAAKP,KAAL,CAAWC,MAAX,CAAkBO,MAAlB,CAAyB,SAAAC,KAAK,CAAG,CAC1D,MAAOA,CAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,MAAI,CAACZ,KAAL,CAAWH,WAAX,CAAuBc,WAAvB,EAAlC,CAAP,CACD,CAF0B,CAAvB,CAGL;AACA,GAAI,KAAKX,KAAL,CAAWC,MAAX,CAAkBY,MAAlB,GAA6B,CAAjC,CAAmC,CAClC,MAAO,0CAAP,CACA,CAFD,IAEO,CACP,MACA,4BAAK,SAAS,CAAC,IAAf,EACC,0BAAI,SAAS,CAAC,IAAd,gBADD,CAEC,oBAAC,SAAD,EAAW,YAAY,CAAE,KAAKnB,cAA9B,EAFD,CAGC,oBAAC,MAAD,MACC,oBAAC,QAAD,EAAU,MAAM,CAAEa,cAAlB,EADD,CAHD,CADA,CASE,CACD,C,iBAvCgBlB,S,EA2ClB,cAAeI,CAAAA,GAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\n// import { robots } from './robots';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\n//virtual DOM, collecting states as robots and searchfields\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\trobots: [],\r\n\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n// more info https://reactjs.org/docs/react-component.html\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t.then(users => this.setState({robots: users }));\r\n\t}\r\n\r\n//listening to the event and with every change runs the function\r\n  onSearchChange = (event) => {\r\n  \tthis.setState({ searchfield: event.target.value})\r\n     }\r\n//rendering cards with robots\r\n  render(){\r\n  \t  \tconst filteredRobots = this.state.robots.filter(robot =>{\r\n  \t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t//loading in slow connection scenario - just comment componentDidMount function for test\r\n\tif (this.state.robots.length === 0){\r\n\t\treturn <h1> Loading</h1>\r\n\t} else {\r\n\treturn(\r\n\t<div className='tc'>\r\n\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t<Scroll>\r\n\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t</Scroll>\r\n\t</div>\r\n\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}